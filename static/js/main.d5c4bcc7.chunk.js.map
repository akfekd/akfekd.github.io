{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","serverNow","App","useState","cntNow","cntChg","style","color","fontSize","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAAe,I,YC+Cf,SAASA,EAAMC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,6BAAKD,EAAME,UAAU,KACrB,6CACA,4DAKSC,MAnDf,WACE,IACA,EAA6BC,mBAAS,CAAC,qBAAO,qBAAO,eAAM,eAAM,mCAAjE,mBAAKF,EAAL,KACA,GADA,KACuBE,mBAAS,IAAhC,mBAAKC,EAAL,KAAaC,EAAb,KAUA,OACE,sBAAKL,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKM,MAfI,CAACC,MAAM,QAASC,SAAS,QAelC,8CAEF,sBAAKR,UAAU,OAAf,UACE,mCAAOC,EAAU,GAAjB,IAAsB,sBAAMQ,QAAS,WAAMJ,EAAOD,EAAO,IAAnC,0BAAtB,IAA0EA,EAA1E,OACA,6DAAW,yCACX,0BAEF,sBAAKJ,UAAU,OAAf,UACE,mCAAOC,EAAU,GAAjB,OACA,6DAAW,yCACX,0BAEF,sBAAKD,UAAU,OAAf,UACE,mCAAOC,EAAU,GAAjB,OACA,6DAAW,yCACX,0BAEF,cAACH,EAAD,CAAOG,UAAWA,QC3BTS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d5c4bcc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */ // warings 표시 안 되게\n\nimport logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  let titleCss = {color:'green', fontSize:'30px'}\n  let [serverNow, serverChg] = useState(['루페온', '카마인', '아만', '카단', '아브렐슈드'])\n  let [cntNow, cntChg] = useState(0); // state, state 변경 함수, 0은 초기값\n\n  /*\n  function whichServer() {\n    var newArray = [...serverNow]; // deep copy를 위한 spread operator\n    newArray.sort();\n    serverChg(newArray);\n  }\n  */\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div style = {titleCss}>React 코딩애플</div>\n      </div>\n      <div className=\"list\">\n        <h3> { serverNow[0] } <span onClick={()=>{ cntChg(cntNow+1) }}>👍</span> {cntNow} </h3>\n        <p>획득한 수 : <span>70</span></p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3> { serverNow[1] } </h3>\n        <p>획득한 수 : <span>12</span></p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3> { serverNow[2] } </h3>\n        <p>획득한 수 : <span>34</span></p>\n        <hr/>\n      </div>\n      <Modal serverNow={serverNow}></Modal>\n    </div> \n  );\n}\n\n// react Component : 함수의 리턴값이 HTML일 때 커스텀태그에 함수명을 넣어서 사용 가능\n// Component 유의사항 : 이름 대문자 시작, return() 안에 있는 건 태그 하나로 묶어야 함 하나로 묶고 싶을 때는 <>(fragment 사용\n// Component 권장 항목 : 반복출현하는 HTML 덩어리들, 자주 변경되는 HTML UI들\nfunction Modal(props) {\n  return(\n    <div className=\"modal\">\n      <h2>{props.serverNow[0]}</h2>\n      <p>날짜</p>\n      <p>상세내용</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}